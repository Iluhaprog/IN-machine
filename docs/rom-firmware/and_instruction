# Бинарный код для инструкции >>> AND <<<, он будет записан в ПЗУ.

#
# Начальный адрес в ПЗУ {0000 0000 0011 0100}
#

1111 1100  1111 1110  0000 0000  0000 0000  0000 0000  0000 0000 # переходим к следующему адресу в осн.памяти
1111 1100  1111 0110  0100 0000  0011 0000  0000 0000  0000 0000 # записываем адрес регистра {R1}
1111 1100  1111 1110  0000 0000  0000 0000  0000 0000  0000 0000 # переходим у следующему адресу в осн.памяти
1111 1100  1111 0110  0010 0000  0011 0000  0000 0000  0000 0000 # записываем адрес регистра {R2}
1111 1100  1111 1110  0000 0000  0000 0000  0000 0000  0000 0000 # переходим у следующему адресу в осн.памяти
1111 1100  1111 0110  0001 0000  0011 0000  0000 0000  0000 0000 # записываем адрес регистра {R3}
1111 1100  1111 0111  0000 1000  0000 0000  0100 0000  0000 0000 # загружаем значение из рег. {R1} в рег. A
1111 1100  1111 0111  0000 0100  0000 0000  0010 0000  0000 0000 # загружаем значение из рег. {R2} в рег. B
1111 1100  1111 0110  1000 0010  0000 0000  0000 1000  0000 0000 # получаем регультат и зпаисываем в рег. {R3}
1111 1100  1111 1110  0000 0000  0000 0000  0000 0000  0000 0000 # переходим к следующему адресу в осн.памяти
1111 1100  1101 0110  0000 0000  0000 0000  0000 0000  0000 0000 # считываем следующую инструкцию

